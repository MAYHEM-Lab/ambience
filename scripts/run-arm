#!/bin/bash
#
# SPDX-License-Identifier: BSD-3-Clause
#
# Copyright Â© 2019 Keith Packard
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.
#

qemu=qemu-system-arm

# select the program
elf="$1"
shift

cpu=unknown
machine=unknown
memory=

#
# Map from GCC configuration to QEMU CPU type
#

case "$elf" in
    */arm_v5te_hard/*|*/arm_v5te_softfp/*)
	# The only v5 supported by qemu is the arm946,
	# which doesn't have an FPU, and all of the GCC
	#cpu=arm946
	;;

    # v6-m - Cortex-M0
    */thumb_v6_m_nofp/*)
	cpu=cortex-m0
	;;

    # v7-a/v7ve - Cortex-A7
    */thumb_v7_a*|*/thumb_v7ve_*)
	cpu=cortex-a7
	;;

    # v7-m - Cortex-M3
    */thumb_v7_m_nofp/*)
	cpu=cortex-m3
	;;

    # v7-r - Cortex-R5
    */thumb_v7_r*)
	cpu=cortex-r5f
	;;

    # v7e-m - Cortex-M4
    */thumb_v7e_m_nofp/*)
	cpu=cortex-m4
	;;
    */thumb_v7e_m_fp_hard/*)
	cpu=cortex-m4
	;;
    */thumb_v7e_m_fp_softfp/*)
	cpu=cortex-m4
	;;

    # v7e-m dp - Cortex-M7
    */thumb_v7e_m_dp_hard/*)
	cpu=cortex-m7
	;;
    */thumb_v7e_m_dp_softfp/*)
	cpu=cortex-m7
	;;

    # v8-a - unknown
    */thumb_v8_a*)
	cpu=unknown
	;;

    # v8.1 - unknown
    */thumb_v8_1*)
	cpu=unknown
	;;

    # v8-m with single-precision FPU - Cortex-M33
    */thumb_v8_m_base_nofp/*)
	cpu=cortex-m33
	;;
    */thumb_v8_m_main_fp_softfp/*)
	cpu=cortex-m33
	;;
    */thumb_v8_m_main_dp_softfp/*)
	;;
    */thumb_v8_m_main_fp_hard/*)
	cpu=cortex-m33
	;;
    */thumb_v8_m_main_nofp/*)
	cpu=cortex-m33
	;;

    # v8-m with double-preicision FPU - none
    */thumb_v8_m_main_dp_hard/*)
	;;

    # v7 - Cortex-A7
    */thumb_v7_nofp/*)
	cpu=cortex-a7
	;;

    # v7 with FPU - Cortex-A9
    */thumb_v7_fp_hard/*)
	cpu=cortex-a8
	;;
    */thumb_v7_fp_softfp/*)
	cpu=cortex-a8
	;;

    # v4t - ti925t
    *)
	# ARMv4t is the default
	cpu=ti925t
	;;
esac

#
# Select a QEMU machine based on the CPU
#
case $cpu in

    # mps2-an385 offers a cortex-m3 processor
    cortex-m3)
	machine=mps2-an385
	;;

    # Maybe qemu upstream will take this machine
    # which supports all Cortex-M processors
    cortex-m*)
	machine=virtm
	;;

    cortex-a53)
	;;

    # The 'none' machine supports all non-M
    # processors
    ti925t|arm946|cortex-a*|cortex-r*)
	machine=none
	memory="-m 1G"
	;;

esac

#
# Make sure the target machine is supported by qemu
# 
if $qemu -machine help | grep -q "^$machine "; then
    :
else
    echo "Skipping $elf" unsupported machine
    exit 77
fi

# Map stdio to a multiplexed character device so we can use it
# for the monitor and semihosting output

chardev=stdio,mux=on,id=stdio0

# Point the semihosting driver at our new chardev

semi=enable=on,chardev=stdio0

input=""

case "$1" in
    -*|"")
	;;
    *)
	semi="$semi",arg="$1"
	input="$1"
	shift
	;;
esac

# Disable monitor

mon=none

# Disable serial

serial=none

echo "$input" | $qemu $memory \
      -chardev $chardev \
      -semihosting-config $semi \
      -monitor $mon \
      -serial $serial \
      -machine $machine,accel=tcg \
      -cpu $cpu \
      -device loader,file=$elf,cpu-num=0 \
      -nographic \
      "$@"

result=$?

if [ $result != 0 ]; then
    case $cpu in
	# Cortex-a8 qemu has minor floating point errors
	# when run on i686 processors
	cortex-a8)
	    test=`uname -m`"-$elf"
	    case "$test" in
		i?86-*math_test)
		    echo "fp imprecise for $cpu on" `uname -m`
		    result=77
		    ;;
	    esac
	    ;;
    esac
fi
exit $result
