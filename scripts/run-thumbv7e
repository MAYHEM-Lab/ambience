#!/bin/bash
#
# SPDX-License-Identifier: BSD-3-Clause
#
# Copyright Â© 2019 Keith Packard
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above
#    copyright notice, this list of conditions and the following
#    disclaimer in the documentation and/or other materials provided
#    with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.
#

qemu=qemu-system-arm

# select the program
elf="$1"
shift

cpu=cortex-m7
machine=unknown
memory=

#
# Select a QEMU machine based on the CPU
#
case $cpu in

    # mps2-an385 offers a cortex-m3 processor
    cortex-m3)
	machine=mps2-an385
	;;

    # Maybe qemu upstream will take this machine
    # which supports all Cortex-M processors
    cortex-m*)
	machine=virtm
	;;

    # The 'none' machine supports all non-M
    # processors
    ti925t|arm946|cortex-a*)
	machine=none
	memory="-m 1G"
	;;

esac

#
# Make sure the target machine is supported by qemu
# 
if $qemu -machine help | grep -q "^$machine "; then
    :
else
    echo "Skipping $elf" unsupported machine
    exit 77
fi

# Map stdio to a multiplexed character device so we can use it
# for the monitor and semihosting output

chardev=stdio,mux=on,id=stdio0

# Point the semihosting driver at our new chardev

semi=enable=on,chardev=stdio0

input=""

case "$1" in
    -*|"")
	;;
    *)
	semi="$semi",arg="$1"
	input="$1"
	shift
	;;
esac

# Disable monitor

mon=none

# Disable serial

serial=none

echo "$input" | $qemu $memory \
      -chardev $chardev \
      -semihosting-config $semi \
      -monitor $mon \
      -serial $serial \
      -machine $machine,accel=tcg \
      -cpu $cpu \
      -device loader,file=$elf,cpu-num=0 \
      -nographic \
      "$@"
