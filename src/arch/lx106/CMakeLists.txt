project(tos CXX ASM)

add_library(lx106_impl esp_impl.cpp tos_arch.hpp user_config.h native.s lx106_missing.hpp tos_platform.hpp)
	#        lwipr_compat/lwipr_compat.c lwipr_compat/lwipr_compat.h lwipr_compat/lwipr_platform.h)
target_include_directories(lx106_impl PRIVATE "../../")
target_include_directories(lx106_impl PUBLIC ".")
target_compile_options(lx106_impl PUBLIC -std=gnu++14)
target_include_directories(lx106_impl PUBLIC "${SDK_ROOT}/sdk/include")
target_include_directories(lx106_impl PUBLIC "${SDK_ROOT}/esp-lwip/config")
target_include_directories(lx106_impl PUBLIC "${SDK_ROOT}/esp-lwip/espressif/include")
target_include_directories(lx106_impl PUBLIC "${SDK_ROOT}/esp-lwip/src/include")
target_include_directories(lx106_impl PUBLIC "${SDK_ROOT}/esp-lwip/src/include/ipv4")
target_link_libraries(lx106_impl PUBLIC "-Tlinker.ld")
target_link_libraries(lx106_impl PUBLIC "-L${CMAKE_CURRENT_SOURCE_DIR}")
target_link_libraries(lx106_impl PUBLIC "-L${TOOLS_BASE}/xtensa-lx106-elf/xtensa-lx106-elf/sysroot/usr/lib")
target_link_libraries(lx106_impl PUBLIC tos_ft lwip c esp_adapters)
target_compile_definitions(lx106_impl PUBLIC LWIP_OPEN_SRC LWIP_RAW ESP8266 WITH_PGM_READ_HELPER)

target_compile_options(lx106_impl PUBLIC -Wno-literal-suffix)

add_library(esp_adapters esp_adapters.cpp)
target_link_libraries(esp_adapters PUBLIC tos_core)
target_link_libraries(esp_adapters PUBLIC "-Wl,--undefined=malloc -Wl,--undefined=free")

if (USE_SSL)
  target_include_directories(lx106_impl PUBLIC "${SDK_ROOT}/axtls-8266/")
  target_include_directories(lx106_impl PUBLIC "${SDK_ROOT}/axtls-8266/crypto")
  target_include_directories(lx106_impl PUBLIC "${SDK_ROOT}/axtls-8266/ssl")
  target_compile_definitions(lx106_impl PUBLIC TOS_HAVE_SSL)
  target_link_libraries(lx106_impl PUBLIC axtls)
endif()

set_target_properties(lx106_impl PROPERTIES LINK_DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/linker.ld)
target_link_libraries(lx106_impl PUBLIC "-Wl,--start-group -lmain -lnet80211 -lwpa -lpp -lphy -lssl -lcrypto -Wl,--end-group -lgcc")
