name: self-hosted-build

on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  self-hosted-build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    steps:
      - uses: FatihBAKIR/checkout@v2

      - name: Create stm32 build dir
        run: mkdir -p /tmp/cmake-build-stm32-iot

      - name: Clear cache
        run: rm -f /tmp/cmake-build-stm32-iot/CMakeCache.txt

      - name: Generate stm32 build
        run: >
          cmake -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DENABLE_LTO=ON -DTOS_BOARD=iot_epd
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache
          $GITHUB_WORKSPACE
        working-directory: /tmp/cmake-build-stm32-iot

      - name: Build all stm32
        run: ninja
        working-directory: /tmp/cmake-build-stm32-iot

      - name: Create nrf52840 build dir
        run: mkdir -p /tmp/cmake-build-nrf52840

      - name: Clear cache
        run: rm -f /tmp/cmake-build-nrf52840/CMakeCache.txt

      - name: Generate nrf52840 build
        run: >
          cmake -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DENABLE_LTO=ON -DTOS_BOARD=nrf52840_dk
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache
          $GITHUB_WORKSPACE
        working-directory: /tmp/cmake-build-nrf52840

      - name: Build all nrf52840
        run: ninja
        working-directory: /tmp/cmake-build-nrf52840

      - name: Create amd64 user build dir
        run: mkdir -p /tmp/cmake-build-barex64-user

      - name: Clear cache
        run: rm -f /tmp/cmake-build-barex64-user/CMakeCache.txt

      - name: Generate amd64 user build
        run: >
          cmake -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DTOS_CPU=x86_64/bare -DENABLE_LTO=ON
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DBUILD_USER_SPACE=ON
          $GITHUB_WORKSPACE
        working-directory: /tmp/cmake-build-barex64-user

      - name: Create amd64 build dir
        run: mkdir -p /tmp/cmake-build-barex64

      - name: Clear cache
        run: rm -f /tmp/cmake-build-barex64/CMakeCache.txt

      - name: Generate amd64 build
        run: >
          cmake -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DTOS_CPU=x86_64/bare -DENABLE_LTO=ON
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache
          $GITHUB_WORKSPACE
        working-directory: /tmp/cmake-build-barex64

      - name: Build amd64
        run: ninja
        working-directory: /tmp/cmake-build-barex64

      - name: Create raspi3 build dir
        run: mkdir -p /tmp/cmake-build-raspi3

      - name: Clear cache
        run: rm -f /tmp/cmake-build-raspi3/CMakeCache.txt

      - name: Generate raspi3 build
        run: >
          cmake -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DTOS_CPU=raspi/3 -DENABLE_LTO=ON
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache
          $GITHUB_WORKSPACE
        working-directory: /tmp/cmake-build-raspi3

      - name: Build raspi3
        run: ninja
        working-directory: /tmp/cmake-build-raspi3