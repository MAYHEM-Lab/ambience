name: build

on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Install deps
      run: sudo apt-get install -y cmake wget xz-utils ninja-build tar gcc-10 g++-10 libboost-all-dev ccache

    - name: Cache LLVM
      id: cache-llvm
      uses: FatihBAKIR/cache@v2
      with:
        path: /opt/llvm
        key: ${{ runner.os }}-llvm

    - name: Download LLVM
      if: steps.cache-llvm.outputs.cache-hit != 'true'
      run: >
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz &&
        tar xf clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz &&
        sudo mv clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04 /opt/llvm

    - name: Download lidlc
      run: wget http://cs.ucsb.edu/~bakir/lidlc && chmod +x lidlc && sudo mv lidlc /usr/local/bin/

    - uses: FatihBAKIR/checkout@v2

    - name: Create hosted debug build dir
      run: mkdir /tmp/cmake-build-debug

    - name: Generate hosted debug build
      run: >
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON -DTOS_CPU=x86/hosted
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache
        $GITHUB_WORKSPACE
      working-directory: /tmp/cmake-build-debug
      env:
        CC: gcc-10
        CXX: g++-10

    - name: Build hosted debug
      run: ninja
      working-directory: /tmp/cmake-build-debug

    - name: Run tests
      run: ctest
      working-directory: /tmp/cmake-build-debug

    - name: Create amd64 build dir
      run: mkdir /tmp/cmake-build-barex64

    - name: Generate amd64 build
      run: >
        cmake -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DTOS_CPU=x86_64/bare -DENABLE_LTO=ON
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache
        $GITHUB_WORKSPACE
      working-directory: /tmp/cmake-build-barex64

    - name: Build amd64
      run: ninja sample_group && ninja sample_group2 && ninja
      working-directory: /tmp/cmake-build-barex64

    - name: Create raspi3 build dir
      run: mkdir /tmp/cmake-build-raspi3

    - name: Generate raspi3 build
      run: >
        cmake -G Ninja -DCMAKE_BUILD_TYPE=MinSizeRel -DTOS_CPU=raspi/3 -DENABLE_LTO=ON
        -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache
        $GITHUB_WORKSPACE
      working-directory: /tmp/cmake-build-raspi3

    - name: Build raspi3
      run: ninja sample_group && ninja
      working-directory: /tmp/cmake-build-raspi3
