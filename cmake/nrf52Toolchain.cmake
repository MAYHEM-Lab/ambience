include(ArmToolchain)

set(CMAKE_ASM_COMPILER_TARGET "armv7-none-eabi")
set(CMAKE_CXX_COMPILER_TARGET "armv7-none-eabi")
set(CMAKE_C_COMPILER_TARGET "armv7-none-eabi")

set(TOS_NRF52_FLAGS "-mcpu=${TOS_CPU_ARCH} -DFLOAT_ABI_HARD -DCONFIG_GPIO_AS_PINRESET -D${NRFSDK_DEF}")
set(TOS_NRF52_FLAGS "${TOS_NRF52_FLAGS} -DNRF52_PAN_74 -mthumb -DNRF_SD_BLE_API_VERSION=7 -D${NRF52_SOFTDEV} -DSOFTDEVICE_PRESENT")
set(TOS_NRF52_FLAGS "${TOS_NRF52_FLAGS} -DSWI_DISABLE0 -mabi=aapcs -mfloat-abi=hard -mfpu=fpv4-sp-d16 -fno-builtin -fshort-enums")

set(CMAKE_C_FLAGS " ${TOS_NRF52_FLAGS}")
set(CMAKE_CXX_FLAGS "${TOS_NRF52_FLAGS}")
set(CMAKE_ASM_FLAGS "${TOS_NRF52_FLAGS}")

set(CMAKE_EXE_LINKER_FLAGS "${TOS_NRF52_FLAGS}")

SET(CMAKE_C_ARCHIVE_CREATE "<CMAKE_AR> qcs <TARGET> <LINK_FLAGS> <OBJECTS>")
SET(CMAKE_C_ARCHIVE_FINISH "<CMAKE_RANLIB> <TARGET>")
SET(CMAKE_CXX_ARCHIVE_CREATE "<CMAKE_AR> qcs <TARGET> <LINK_FLAGS> <OBJECTS>")
SET(CMAKE_CXX_ARCHIVE_FINISH "<CMAKE_RANLIB> <TARGET>")

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}" CACHE STRING "CFLAGS")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}" CACHE STRING "CXXFLAGS")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}" CACHE STRING "")