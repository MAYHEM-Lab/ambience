version: 2
workflows:
  version: 2
  all_platforms:
    jobs:
    - esp_build
    - nrf52_build
    - stm32_build
    - avr_build
    - x86_build
jobs:
  nrf52_build:
    docker:
      - image: bakir/tos-builder-base
    steps:
      - checkout
      - run:
          name: Get submodules
          command: git submodule update --init --recursive
      - run:
          name: Download toolchain
          command: wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/8-2018q4/gcc-arm-none-eabi-8-2018-q4-major-linux.tar.bz2
      - run:
          name: Extract toolchain
          command: tar xf gcc-arm-none-eabi-8-2018-q4-major-linux.tar.bz2
      - run:
          name: Move the toolchain
          command: mkdir -p /opt/x-tools/; mv gcc-arm-none-eabi-8-2018-q4-major /opt/x-tools
      - run:
          name: Download nRF52 SDK
          command: wget http://cs.ucsb.edu/~bakir/nRF5_SDK_15.3.0_59ac345.zip -O nrf5-sdk.zip
      - run:
          name: Extract SDK
          command: unzip nrf5-sdk.zip -d /opt/x-tools
      - run:
          name: Generate Project
          command: mkdir build && cd build && cmake -G Ninja -DTOS_CPU=nrf52/832 -DCMAKE_BUILD_TYPE=MinSizeRel ..
      - run:
          working_directory: build/
          name: Build Project
          command: ninja
      - run:
          name: Generate Project
          command: mkdir build_840 && cd build_840 && cmake -G Ninja -DTOS_CPU=nrf52/840 -DCMAKE_BUILD_TYPE=MinSizeRel ..
      - run:
          working_directory: build_840/
          name: Build Project
          command: ninja
  stm32_build:
    docker:
      - image: bakir/tos-builder-base
    steps:
      - checkout
      - run:
          name: Update apt
          command: apt-get update
      - run:
          name: Install unzip wget
          command: apt-get install -y unzip wget ninja-build cmake git
      - run:
          name: Get submodules
          command: git submodule update --init --recursive
      - run:
          name: Download toolchain
          command: wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/8-2018q4/gcc-arm-none-eabi-8-2018-q4-major-linux.tar.bz2
      - run:
          name: Extract toolchain
          command: tar xf gcc-arm-none-eabi-8-2018-q4-major-linux.tar.bz2
      - run:
          name: Move the toolchain
          command: mkdir -p /opt/x-tools/; mv gcc-arm-none-eabi-8-2018-q4-major /opt/x-tools
      - run:
          name: Download libopencm3
          command: wget http://cs.ucsb.edu/~bakir/libopencm3.zip -O libopencm3.zip
      - run:
          name: Extract libopencm3
          command: unzip libopencm3.zip -d /opt/x-tools
      - run:
          name: Generate Project
          command: mkdir build-f103 && cd build-f103 && cmake -G Ninja -DTOS_CPU=stm32/f1/03c8 -DCMAKE_BUILD_TYPE=MinSizeRel ..
      - run:
          working_directory: build-f103/
          name: Build Project
          command: ninja
      - run:
          name: Generate Project
          command: mkdir build-f746 && cd build-f746 && cmake -G Ninja -DTOS_CPU=stm32/f7/46 -DCMAKE_BUILD_TYPE=MinSizeRel ..
      - run:
          working_directory: build-f746/
          name: Build Project
          command: ninja
      - run:
          name: Generate Project
          command: mkdir build-l053 && cd build-l053 && cmake -G Ninja -DTOS_CPU=stm32/l0/53 -DCMAKE_BUILD_TYPE=MinSizeRel ..
      - run:
          working_directory: build-l053/
          name: Build Project
          command: ninja
      - run:
          name: Generate Project
          command: mkdir build-l475 && cd build-l475 && cmake -G Ninja -DTOS_CPU=stm32/l4/75 -DCMAKE_BUILD_TYPE=MinSizeRel ..
      - run:
          working_directory: build-l475/
          name: Build Project
          command: ninja
  x86_build:
    docker:
      - image: bakir/tos-builder-base
    steps:
      - checkout
      - run:
          name: Get submodules
          command: git submodule update --init --recursive
      - run:
          environment:
            CC: gcc-8
            CXX: g++-8
          name: Generate Project
          command: mkdir build && cd build && cmake -G Ninja -DTOS_BOARD=hosted/x86 -DBUILD_TESTS=ON ..
      - run:
          working_directory: build/
          name: Build Project
          command: ninja
      - run:
          working_directory: build/
          name: Run Tests
          command: ninja test
      - run:
          environment:
            CC: clang-8
            CXX: clang++-8
          name: Generate Project
          command: mkdir clang-build && cd clang-build && cmake -G Ninja -DTOS_BOARD=hosted/x86 -DBUILD_TESTS=ON ..
      - run:
          working_directory: clang-build/
          name: Build Project
          command: ninja
      - run:
          working_directory: clang-build/
          name: Run Tests
          command: ninja test

  avr_build:
    docker:
      - image: bakir/tos-builder-base
    steps:
      - checkout
      - run:
          name: Get submodules
          command: git submodule update --init --recursive
      - run:
          name: Download toolchain
          command: wget http://cs.ucsb.edu/~bakir/avr-gcc.tar.bz2
      - run:
          name: Create toolchain dir
          command: mkdir -p /opt/x-tools/avr-gcc
      - run:
          name: Extract toolchain
          command: tar xf avr-gcc.tar.bz2 -C /opt/x-tools/avr-gcc
      - run:
          name: Generate Project
          command: mkdir build && cd build && cmake -G Ninja -DTOS_BOARD=arduino/pro-mini-8 -DCMAKE_BUILD_TYPE=MinSizeRel ..
      - run:
          working_directory: build/
          name: Build Project
          command: ninja
  esp_build:
    docker:
    - image: bakir/tos-builder-base
    steps:
    - checkout
    - run:
        name: Update apt
        command: apt-get update
    - run:
        name: Install unzip wget
        command: apt-get install -y unzip wget bzip2 tar ninja-build cmake git
    - run:
        name: Get submodules
        command: git submodule update --init --recursive
    - run:
        name: Download toolchain
        command: wget https://github.com/earlephilhower/esp-quick-toolchain/releases/download/3.0.0-gnu5/x86_64-w64-mingw32.xtensa-lx106-elf-a5c9861.1575819473.zip
    - run:
        name: Create toolchain dir
        command: mkdir -p /opt/x-tools
    - run:
        name: Extract toolchain
        command: tar xf x86_64-w64-mingw32.xtensa-lx106-elf-a5c9861.1575819473.zip -C /opt/x-tools/
    - run:
        name: Generate Project
        command: mkdir build && cd build && cmake -G Ninja -DTOS_CPU=esp/8266 -DCMAKE_BUILD_TYPE=MinSizeRel ..
    - run:
        working_directory: build/
        name: Build Project
        command: ninja
