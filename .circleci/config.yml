version: 2
jobs:
  arm_build:
    docker:
      - image: ubuntu:bionic
    steps:
      - checkout
      - run:
          name: Update apt
          command: apt-get update
      - run:
          name: Install unzip
          command: apt-get install -y unzip
      - run:
          name: Download toolchain
          command: wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2017q4/gcc-arm-none-eabi-7-2017-q4-major-linux.tar.bz2
      - run:
          name: Extract toolchain
          command: tar xf gcc-arm-none-eabi-7-2017-q4-major-linux.tar.bz2
      - run:
          name: Move the toolchain
          command: mkdir -p /opt/x-tools/; mv gcc-arm-none-eabi-7-2017-q4-major /opt/x-tools
      - run:
          name: Download nRF52 SDK
          command: wget https://www.nordicsemi.com/eng/nordic/download_resource/59011/70/53512602/116085 -O nrf5-sdk.zip
      - run:
          name: Extract SDK
          command: unzip nrf5-sdk.zip -d /opt/x-tools
      - run:
          name: Generate Project
          command: mkdir build && cd build && cmake -G Ninja -DTOS_ARM=ON ..
      - run:
          working_directory: build/
          name: Build Project
          command: ninja
  x86_build:
    docker:
      - image: ubuntu:bionic
    steps:
      - checkout
      - run:
          name: Update apt
          command: apt-get update
      - run:
          name: Install Toolchain
          command: apt-get install -y g++-7 cmake ninja-build
      - run:
          environment:
            CXX: g++-7
          name: Generate Project
          command: mkdir build && cd build && cmake -G Ninja -DTOS_X86=ON ..
      - run:
          working_directory: build/
          name: Build Project
          command: ninja
  avr_build:
    docker:
      - image: ubuntu:bionic
    steps:
      - checkout
      - run:
          name: Update apt
          command: apt-get update
      - run:
          name: Install Toolchain
          command: apt-get install -y gcc-avr cmake ninja-build avr-libc
      - run:
          environment:
            CXX: avr-g++
            CC: avr-gcc
          name: Generate Project
          command: mkdir build && cd build && cmake -G Ninja -DTOS_AVR=ON .. && cmake ..
      - run:
          working_directory: build/
          name: Build Project
          command: ninja
workflows:
  version: 2
  all_platforms:
    jobs:
      - arm_build
      - avr_build
      - x86_build
