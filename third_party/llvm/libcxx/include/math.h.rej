***************
*** 509,518 ****
  bool
  isinf(double __lcpp_x) _NOEXCEPT { return __libcpp_isinf(__lcpp_x); }
  
  inline _LIBCPP_INLINE_VISIBILITY
  bool
  isinf(long double __lcpp_x) _NOEXCEPT { return __libcpp_isinf(__lcpp_x); }
  #endif
  
  #endif // isinf
  
--- 509,520 ----
  bool
  isinf(double __lcpp_x) _NOEXCEPT { return __libcpp_isinf(__lcpp_x); }
  
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY
  bool
  isinf(long double __lcpp_x) _NOEXCEPT { return __libcpp_isinf(__lcpp_x); }
  #endif
+ #endif
  
  #endif // isinf
  
***************
*** 557,566 ****
  bool
  isnan(double __lcpp_x) _NOEXCEPT { return __libcpp_isnan(__lcpp_x); }
  
  inline _LIBCPP_INLINE_VISIBILITY
  bool
  isnan(long double __lcpp_x) _NOEXCEPT { return __libcpp_isnan(__lcpp_x); }
  #endif
  
  #endif // isnan
  
--- 559,570 ----
  bool
  isnan(double __lcpp_x) _NOEXCEPT { return __libcpp_isnan(__lcpp_x); }
  
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY
  bool
  isnan(long double __lcpp_x) _NOEXCEPT { return __libcpp_isnan(__lcpp_x); }
  #endif
+ #endif
  
  #endif // isnan
  
***************
*** 790,797 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       acos(float __lcpp_x) _NOEXCEPT       {return ::acosf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double acos(long double __lcpp_x) _NOEXCEPT {return ::acosl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 794,803 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       acos(float __lcpp_x) _NOEXCEPT       {return ::acosf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double acos(long double __lcpp_x) _NOEXCEPT {return ::acosl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 802,809 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       asin(float __lcpp_x) _NOEXCEPT       {return ::asinf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double asin(long double __lcpp_x) _NOEXCEPT {return ::asinl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 808,817 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       asin(float __lcpp_x) _NOEXCEPT       {return ::asinf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double asin(long double __lcpp_x) _NOEXCEPT {return ::asinl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 814,821 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       atan(float __lcpp_x) _NOEXCEPT       {return ::atanf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double atan(long double __lcpp_x) _NOEXCEPT {return ::atanl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 822,831 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       atan(float __lcpp_x) _NOEXCEPT       {return ::atanf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double atan(long double __lcpp_x) _NOEXCEPT {return ::atanl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 826,833 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       atan2(float __lcpp_y, float __lcpp_x) _NOEXCEPT             {return ::atan2f(__lcpp_y, __lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double atan2(long double __lcpp_y, long double __lcpp_x) _NOEXCEPT {return ::atan2l(__lcpp_y, __lcpp_x);}
  #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
--- 836,845 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       atan2(float __lcpp_y, float __lcpp_x) _NOEXCEPT             {return ::atan2f(__lcpp_y, __lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double atan2(long double __lcpp_y, long double __lcpp_x) _NOEXCEPT {return ::atan2l(__lcpp_y, __lcpp_x);}
  #endif
+ #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 849,856 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       ceil(float __lcpp_x) _NOEXCEPT       {return ::ceilf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double ceil(long double __lcpp_x) _NOEXCEPT {return ::ceill(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 861,870 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       ceil(float __lcpp_x) _NOEXCEPT       {return ::ceilf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double ceil(long double __lcpp_x) _NOEXCEPT {return ::ceill(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 861,868 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       cos(float __lcpp_x) _NOEXCEPT       {return ::cosf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double cos(long double __lcpp_x) _NOEXCEPT {return ::cosl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 875,884 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       cos(float __lcpp_x) _NOEXCEPT       {return ::cosf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double cos(long double __lcpp_x) _NOEXCEPT {return ::cosl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 873,880 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       cosh(float __lcpp_x) _NOEXCEPT       {return ::coshf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double cosh(long double __lcpp_x) _NOEXCEPT {return ::coshl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 889,898 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       cosh(float __lcpp_x) _NOEXCEPT       {return ::coshf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double cosh(long double __lcpp_x) _NOEXCEPT {return ::coshl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 885,892 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       exp(float __lcpp_x) _NOEXCEPT       {return ::expf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double exp(long double __lcpp_x) _NOEXCEPT {return ::expl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 903,912 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       exp(float __lcpp_x) _NOEXCEPT       {return ::expf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double exp(long double __lcpp_x) _NOEXCEPT {return ::expl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 897,904 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       fabs(float __lcpp_x) _NOEXCEPT       {return ::fabsf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double fabs(long double __lcpp_x) _NOEXCEPT {return ::fabsl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 917,926 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       fabs(float __lcpp_x) _NOEXCEPT       {return ::fabsf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double fabs(long double __lcpp_x) _NOEXCEPT {return ::fabsl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 909,916 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       floor(float __lcpp_x) _NOEXCEPT       {return ::floorf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double floor(long double __lcpp_x) _NOEXCEPT {return ::floorl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 931,940 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       floor(float __lcpp_x) _NOEXCEPT       {return ::floorf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double floor(long double __lcpp_x) _NOEXCEPT {return ::floorl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 921,928 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       fmod(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fmodf(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double fmod(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fmodl(__lcpp_x, __lcpp_y);}
  #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
--- 945,954 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       fmod(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fmodf(__lcpp_x, __lcpp_y);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double fmod(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fmodl(__lcpp_x, __lcpp_y);}
  #endif
+ #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 944,951 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       frexp(float __lcpp_x, int* __lcpp_e) _NOEXCEPT       {return ::frexpf(__lcpp_x, __lcpp_e);}
  inline _LIBCPP_INLINE_VISIBILITY long double frexp(long double __lcpp_x, int* __lcpp_e) _NOEXCEPT {return ::frexpl(__lcpp_x, __lcpp_e);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 970,979 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       frexp(float __lcpp_x, int* __lcpp_e) _NOEXCEPT       {return ::frexpf(__lcpp_x, __lcpp_e);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double frexp(long double __lcpp_x, int* __lcpp_e) _NOEXCEPT {return ::frexpl(__lcpp_x, __lcpp_e);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 956,963 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       ldexp(float __lcpp_x, int __lcpp_e) _NOEXCEPT       {return ::ldexpf(__lcpp_x, __lcpp_e);}
  inline _LIBCPP_INLINE_VISIBILITY long double ldexp(long double __lcpp_x, int __lcpp_e) _NOEXCEPT {return ::ldexpl(__lcpp_x, __lcpp_e);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 984,993 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       ldexp(float __lcpp_x, int __lcpp_e) _NOEXCEPT       {return ::ldexpf(__lcpp_x, __lcpp_e);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double ldexp(long double __lcpp_x, int __lcpp_e) _NOEXCEPT {return ::ldexpl(__lcpp_x, __lcpp_e);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 968,975 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       log(float __lcpp_x) _NOEXCEPT       {return ::logf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double log(long double __lcpp_x) _NOEXCEPT {return ::logl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 998,1007 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       log(float __lcpp_x) _NOEXCEPT       {return ::logf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double log(long double __lcpp_x) _NOEXCEPT {return ::logl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 980,987 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       log10(float __lcpp_x) _NOEXCEPT       {return ::log10f(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double log10(long double __lcpp_x) _NOEXCEPT {return ::log10l(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1012,1021 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       log10(float __lcpp_x) _NOEXCEPT       {return ::log10f(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double log10(long double __lcpp_x) _NOEXCEPT {return ::log10l(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 992,1006 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       modf(float __lcpp_x, float* __lcpp_y) _NOEXCEPT             {return ::modff(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double modf(long double __lcpp_x, long double* __lcpp_y) _NOEXCEPT {return ::modfl(__lcpp_x, __lcpp_y);}
  #endif
  
  // pow
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       pow(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::powf(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double pow(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::powl(__lcpp_x, __lcpp_y);}
  #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1026,1044 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       modf(float __lcpp_x, float* __lcpp_y) _NOEXCEPT             {return ::modff(__lcpp_x, __lcpp_y);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double modf(long double __lcpp_x, long double* __lcpp_y) _NOEXCEPT {return ::modfl(__lcpp_x, __lcpp_y);}
  #endif
+ #endif
  
  // pow
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       pow(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::powf(__lcpp_x, __lcpp_y);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double pow(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::powl(__lcpp_x, __lcpp_y);}
  #endif
+ #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1022,1029 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       sin(float __lcpp_x) _NOEXCEPT       {return ::sinf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double sin(long double __lcpp_x) _NOEXCEPT {return ::sinl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1060,1069 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       sin(float __lcpp_x) _NOEXCEPT       {return ::sinf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double sin(long double __lcpp_x) _NOEXCEPT {return ::sinl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1034,1041 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       sinh(float __lcpp_x) _NOEXCEPT       {return ::sinhf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double sinh(long double __lcpp_x) _NOEXCEPT {return ::sinhl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1074,1083 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       sinh(float __lcpp_x) _NOEXCEPT       {return ::sinhf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double sinh(long double __lcpp_x) _NOEXCEPT {return ::sinhl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1046,1053 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       sqrt(float __lcpp_x) _NOEXCEPT       {return ::sqrtf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double sqrt(long double __lcpp_x) _NOEXCEPT {return ::sqrtl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1088,1097 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       sqrt(float __lcpp_x) _NOEXCEPT       {return ::sqrtf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double sqrt(long double __lcpp_x) _NOEXCEPT {return ::sqrtl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1058,1065 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       tan(float __lcpp_x) _NOEXCEPT       {return ::tanf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double tan(long double __lcpp_x) _NOEXCEPT {return ::tanl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1102,1111 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       tan(float __lcpp_x) _NOEXCEPT       {return ::tanf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double tan(long double __lcpp_x) _NOEXCEPT {return ::tanl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1070,1077 ****
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       tanh(float __lcpp_x) _NOEXCEPT       {return ::tanhf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double tanh(long double __lcpp_x) _NOEXCEPT {return ::tanhl(__lcpp_x);}
  #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1116,1125 ----
  
  #if !(defined(_AIX) || defined(__sun__))
  inline _LIBCPP_INLINE_VISIBILITY float       tanh(float __lcpp_x) _NOEXCEPT       {return ::tanhf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double tanh(long double __lcpp_x) _NOEXCEPT {return ::tanhl(__lcpp_x);}
  #endif
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1081,1087 ****
  // acosh
  
  inline _LIBCPP_INLINE_VISIBILITY float       acosh(float __lcpp_x) _NOEXCEPT       {return ::acoshf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double acosh(long double __lcpp_x) _NOEXCEPT {return ::acoshl(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1129,1137 ----
  // acosh
  
  inline _LIBCPP_INLINE_VISIBILITY float       acosh(float __lcpp_x) _NOEXCEPT       {return ::acoshf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double acosh(long double __lcpp_x) _NOEXCEPT {return ::acoshl(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1091,1097 ****
  // asinh
  
  inline _LIBCPP_INLINE_VISIBILITY float       asinh(float __lcpp_x) _NOEXCEPT       {return ::asinhf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double asinh(long double __lcpp_x) _NOEXCEPT {return ::asinhl(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1141,1149 ----
  // asinh
  
  inline _LIBCPP_INLINE_VISIBILITY float       asinh(float __lcpp_x) _NOEXCEPT       {return ::asinhf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double asinh(long double __lcpp_x) _NOEXCEPT {return ::asinhl(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1101,1107 ****
  // atanh
  
  inline _LIBCPP_INLINE_VISIBILITY float       atanh(float __lcpp_x) _NOEXCEPT       {return ::atanhf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double atanh(long double __lcpp_x) _NOEXCEPT {return ::atanhl(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1153,1161 ----
  // atanh
  
  inline _LIBCPP_INLINE_VISIBILITY float       atanh(float __lcpp_x) _NOEXCEPT       {return ::atanhf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double atanh(long double __lcpp_x) _NOEXCEPT {return ::atanhl(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1111,1117 ****
  // cbrt
  
  inline _LIBCPP_INLINE_VISIBILITY float       cbrt(float __lcpp_x) _NOEXCEPT       {return ::cbrtf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double cbrt(long double __lcpp_x) _NOEXCEPT {return ::cbrtl(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1165,1173 ----
  // cbrt
  
  inline _LIBCPP_INLINE_VISIBILITY float       cbrt(float __lcpp_x) _NOEXCEPT       {return ::cbrtf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double cbrt(long double __lcpp_x) _NOEXCEPT {return ::cbrtl(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1198,1204 ****
  // erf
  
  inline _LIBCPP_INLINE_VISIBILITY float       erf(float __lcpp_x) _NOEXCEPT       {return ::erff(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double erf(long double __lcpp_x) _NOEXCEPT {return ::erfl(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1254,1262 ----
  // erf
  
  inline _LIBCPP_INLINE_VISIBILITY float       erf(float __lcpp_x) _NOEXCEPT       {return ::erff(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double erf(long double __lcpp_x) _NOEXCEPT {return ::erfl(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1208,1214 ****
  // erfc
  
  inline _LIBCPP_INLINE_VISIBILITY float       erfc(float __lcpp_x) _NOEXCEPT       {return ::erfcf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double erfc(long double __lcpp_x) _NOEXCEPT {return ::erfcl(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1266,1274 ----
  // erfc
  
  inline _LIBCPP_INLINE_VISIBILITY float       erfc(float __lcpp_x) _NOEXCEPT       {return ::erfcf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double erfc(long double __lcpp_x) _NOEXCEPT {return ::erfcl(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1218,1224 ****
  // exp2
  
  inline _LIBCPP_INLINE_VISIBILITY float       exp2(float __lcpp_x) _NOEXCEPT       {return ::exp2f(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double exp2(long double __lcpp_x) _NOEXCEPT {return ::exp2l(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1278,1286 ----
  // exp2
  
  inline _LIBCPP_INLINE_VISIBILITY float       exp2(float __lcpp_x) _NOEXCEPT       {return ::exp2f(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double exp2(long double __lcpp_x) _NOEXCEPT {return ::exp2l(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1228,1234 ****
  // expm1
  
  inline _LIBCPP_INLINE_VISIBILITY float       expm1(float __lcpp_x) _NOEXCEPT       {return ::expm1f(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double expm1(long double __lcpp_x) _NOEXCEPT {return ::expm1l(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1290,1298 ----
  // expm1
  
  inline _LIBCPP_INLINE_VISIBILITY float       expm1(float __lcpp_x) _NOEXCEPT       {return ::expm1f(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double expm1(long double __lcpp_x) _NOEXCEPT {return ::expm1l(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1238,1244 ****
  // fdim
  
  inline _LIBCPP_INLINE_VISIBILITY float       fdim(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fdimf(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double fdim(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fdiml(__lcpp_x, __lcpp_y);}
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1302,1310 ----
  // fdim
  
  inline _LIBCPP_INLINE_VISIBILITY float       fdim(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fdimf(__lcpp_x, __lcpp_y);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double fdim(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fdiml(__lcpp_x, __lcpp_y);}
+ #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1300,1306 ****
  // fmax
  
  inline _LIBCPP_INLINE_VISIBILITY float       fmax(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fmaxf(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double fmax(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fmaxl(__lcpp_x, __lcpp_y);}
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1366,1374 ----
  // fmax
  
  inline _LIBCPP_INLINE_VISIBILITY float       fmax(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fmaxf(__lcpp_x, __lcpp_y);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double fmax(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fmaxl(__lcpp_x, __lcpp_y);}
+ #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1321,1327 ****
  // fmin
  
  inline _LIBCPP_INLINE_VISIBILITY float       fmin(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fminf(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double fmin(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fminl(__lcpp_x, __lcpp_y);}
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1389,1397 ----
  // fmin
  
  inline _LIBCPP_INLINE_VISIBILITY float       fmin(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fminf(__lcpp_x, __lcpp_y);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double fmin(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fminl(__lcpp_x, __lcpp_y);}
+ #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1342,1348 ****
  // hypot
  
  inline _LIBCPP_INLINE_VISIBILITY float       hypot(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::hypotf(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double hypot(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::hypotl(__lcpp_x, __lcpp_y);}
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1412,1420 ----
  // hypot
  
  inline _LIBCPP_INLINE_VISIBILITY float       hypot(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::hypotf(__lcpp_x, __lcpp_y);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double hypot(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::hypotl(__lcpp_x, __lcpp_y);}
+ #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1363,1369 ****
  // ilogb
  
  inline _LIBCPP_INLINE_VISIBILITY int ilogb(float __lcpp_x) _NOEXCEPT       {return ::ilogbf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY int ilogb(long double __lcpp_x) _NOEXCEPT {return ::ilogbl(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1435,1443 ----
  // ilogb
  
  inline _LIBCPP_INLINE_VISIBILITY int ilogb(float __lcpp_x) _NOEXCEPT       {return ::ilogbf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY int ilogb(long double __lcpp_x) _NOEXCEPT {return ::ilogbl(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1373,1379 ****
  // lgamma
  
  inline _LIBCPP_INLINE_VISIBILITY float       lgamma(float __lcpp_x) _NOEXCEPT       {return ::lgammaf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double lgamma(long double __lcpp_x) _NOEXCEPT {return ::lgammal(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1447,1455 ----
  // lgamma
  
  inline _LIBCPP_INLINE_VISIBILITY float       lgamma(float __lcpp_x) _NOEXCEPT       {return ::lgammaf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double lgamma(long double __lcpp_x) _NOEXCEPT {return ::lgammal(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1445,1451 ****
  // log1p
  
  inline _LIBCPP_INLINE_VISIBILITY float       log1p(float __lcpp_x) _NOEXCEPT       {return ::log1pf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double log1p(long double __lcpp_x) _NOEXCEPT {return ::log1pl(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1521,1529 ----
  // log1p
  
  inline _LIBCPP_INLINE_VISIBILITY float       log1p(float __lcpp_x) _NOEXCEPT       {return ::log1pf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double log1p(long double __lcpp_x) _NOEXCEPT {return ::log1pl(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1455,1461 ****
  // log2
  
  inline _LIBCPP_INLINE_VISIBILITY float       log2(float __lcpp_x) _NOEXCEPT       {return ::log2f(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double log2(long double __lcpp_x) _NOEXCEPT {return ::log2l(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1533,1541 ----
  // log2
  
  inline _LIBCPP_INLINE_VISIBILITY float       log2(float __lcpp_x) _NOEXCEPT       {return ::log2f(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double log2(long double __lcpp_x) _NOEXCEPT {return ::log2l(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1465,1471 ****
  // logb
  
  inline _LIBCPP_INLINE_VISIBILITY float       logb(float __lcpp_x) _NOEXCEPT       {return ::logbf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double logb(long double __lcpp_x) _NOEXCEPT {return ::logbl(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1545,1553 ----
  // logb
  
  inline _LIBCPP_INLINE_VISIBILITY float       logb(float __lcpp_x) _NOEXCEPT       {return ::logbf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double logb(long double __lcpp_x) _NOEXCEPT {return ::logbl(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1539,1545 ****
  // nearbyint
  
  inline _LIBCPP_INLINE_VISIBILITY float       nearbyint(float __lcpp_x) _NOEXCEPT       {return ::nearbyintf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double nearbyint(long double __lcpp_x) _NOEXCEPT {return ::nearbyintl(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1621,1629 ----
  // nearbyint
  
  inline _LIBCPP_INLINE_VISIBILITY float       nearbyint(float __lcpp_x) _NOEXCEPT       {return ::nearbyintf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double nearbyint(long double __lcpp_x) _NOEXCEPT {return ::nearbyintl(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1549,1555 ****
  // nextafter
  
  inline _LIBCPP_INLINE_VISIBILITY float       nextafter(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::nextafterf(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double nextafter(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::nextafterl(__lcpp_x, __lcpp_y);}
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1633,1641 ----
  // nextafter
  
  inline _LIBCPP_INLINE_VISIBILITY float       nextafter(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::nextafterf(__lcpp_x, __lcpp_y);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double nextafter(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::nextafterl(__lcpp_x, __lcpp_y);}
+ #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1569,1586 ****
  
  // nexttoward
  
  inline _LIBCPP_INLINE_VISIBILITY float       nexttoward(float __lcpp_x, long double __lcpp_y) _NOEXCEPT       {return ::nexttowardf(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double nexttoward(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::nexttowardl(__lcpp_x, __lcpp_y);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
  typename std::enable_if<std::is_integral<_A1>::value, double>::type
  nexttoward(_A1 __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::nexttoward((double)__lcpp_x, __lcpp_y);}
  
  // remainder
  
  inline _LIBCPP_INLINE_VISIBILITY float       remainder(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::remainderf(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double remainder(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::remainderl(__lcpp_x, __lcpp_y);}
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1655,1680 ----
  
  // nexttoward
  
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY float       nexttoward(float __lcpp_x, long double __lcpp_y) _NOEXCEPT       {return ::nexttowardf(__lcpp_x, __lcpp_y);}
+ #endif
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double nexttoward(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::nexttowardl(__lcpp_x, __lcpp_y);}
+ #endif
  
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
  typename std::enable_if<std::is_integral<_A1>::value, double>::type
  nexttoward(_A1 __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::nexttoward((double)__lcpp_x, __lcpp_y);}
+ #endif
  
  // remainder
  
  inline _LIBCPP_INLINE_VISIBILITY float       remainder(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::remainderf(__lcpp_x, __lcpp_y);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double remainder(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::remainderl(__lcpp_x, __lcpp_y);}
+ #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1601,1607 ****
  // remquo
  
  inline _LIBCPP_INLINE_VISIBILITY float       remquo(float __lcpp_x, float __lcpp_y, int* __lcpp_z) _NOEXCEPT             {return ::remquof(__lcpp_x, __lcpp_y, __lcpp_z);}
  inline _LIBCPP_INLINE_VISIBILITY long double remquo(long double __lcpp_x, long double __lcpp_y, int* __lcpp_z) _NOEXCEPT {return ::remquol(__lcpp_x, __lcpp_y, __lcpp_z);}
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1695,1703 ----
  // remquo
  
  inline _LIBCPP_INLINE_VISIBILITY float       remquo(float __lcpp_x, float __lcpp_y, int* __lcpp_z) _NOEXCEPT             {return ::remquof(__lcpp_x, __lcpp_y, __lcpp_z);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double remquo(long double __lcpp_x, long double __lcpp_y, int* __lcpp_z) _NOEXCEPT {return ::remquol(__lcpp_x, __lcpp_y, __lcpp_z);}
+ #endif
  
  template <class _A1, class _A2>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1684,1690 ****
  // scalbln
  
  inline _LIBCPP_INLINE_VISIBILITY float       scalbln(float __lcpp_x, long __lcpp_y) _NOEXCEPT       {return ::scalblnf(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double scalbln(long double __lcpp_x, long __lcpp_y) _NOEXCEPT {return ::scalblnl(__lcpp_x, __lcpp_y);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1780,1788 ----
  // scalbln
  
  inline _LIBCPP_INLINE_VISIBILITY float       scalbln(float __lcpp_x, long __lcpp_y) _NOEXCEPT       {return ::scalblnf(__lcpp_x, __lcpp_y);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double scalbln(long double __lcpp_x, long __lcpp_y) _NOEXCEPT {return ::scalblnl(__lcpp_x, __lcpp_y);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1694,1700 ****
  // scalbn
  
  inline _LIBCPP_INLINE_VISIBILITY float       scalbn(float __lcpp_x, int __lcpp_y) _NOEXCEPT       {return ::scalbnf(__lcpp_x, __lcpp_y);}
  inline _LIBCPP_INLINE_VISIBILITY long double scalbn(long double __lcpp_x, int __lcpp_y) _NOEXCEPT {return ::scalbnl(__lcpp_x, __lcpp_y);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1792,1800 ----
  // scalbn
  
  inline _LIBCPP_INLINE_VISIBILITY float       scalbn(float __lcpp_x, int __lcpp_y) _NOEXCEPT       {return ::scalbnf(__lcpp_x, __lcpp_y);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double scalbn(long double __lcpp_x, int __lcpp_y) _NOEXCEPT {return ::scalbnl(__lcpp_x, __lcpp_y);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
***************
*** 1704,1710 ****
  // tgamma
  
  inline _LIBCPP_INLINE_VISIBILITY float       tgamma(float __lcpp_x) _NOEXCEPT       {return ::tgammaf(__lcpp_x);}
  inline _LIBCPP_INLINE_VISIBILITY long double tgamma(long double __lcpp_x) _NOEXCEPT {return ::tgammal(__lcpp_x);}
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
--- 1804,1812 ----
  // tgamma
  
  inline _LIBCPP_INLINE_VISIBILITY float       tgamma(float __lcpp_x) _NOEXCEPT       {return ::tgammaf(__lcpp_x);}
+ #if !defined(_LIBCPP_HAS_NO_LONG_DOUBLE)
  inline _LIBCPP_INLINE_VISIBILITY long double tgamma(long double __lcpp_x) _NOEXCEPT {return ::tgammal(__lcpp_x);}
+ #endif
  
  template <class _A1>
  inline _LIBCPP_INLINE_VISIBILITY
